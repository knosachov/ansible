# setup-app.yml

---
  - hosts: webservers

    vars:
      path_to_app: "/var/www/html"

# requires --ask-vault-pass argument while running ansible-playbook
#    vars_files:
#      - ./vars/secret-variables.yml
 
# Prompt user to type yes if phpinfo needed
#    vars_prompt:
#      - name: "create_phpinfo"
#        prompt: "Type <yes> to upload a phpinfo.php file in root directory:"    

    tasks:
     # Copying files
     - name: Upload index.php file
       copy: 
         src: ./index.php
         dest: "{{ path_to_app  }}"
         mode: 0755
       tags: upload_index

#     - name: Use secret password here
#       debug:
#         msg: "{{ secret_password  }}"
#       tags: show_password

     - name: Upload phpinfo.php file
       copy:
         src: ./phpinfo.php
         dest: "{{ path_to_app  }}"
         mode: 0755
#       when: create_phpinfo == 'yes'
       tags: upload_phpinfo
   
     - name: Create simple info page
       copy:
         dest: "{{ path_to_app  }}/info.php"
         content: "<h1> Info about our server {{ ansible_hostname  }} </h1>"      #Square bracers are needed to evaluate an ansible variable
       tags: create_infopage

     - name: See directory contents
       command: ls -lsa {{ path_to_app }}
       register: dir_contents                                                      #Saves an ls output into variable called dir_content, so we could print it again using debug module.
       changed_when: false 
      
     - name: Debug directory contents
       debug: 
         msg: "{{ dir_contents  }}"

     # Make changes in files
     - name: Configure php.ini file
       lineinfile:
         path: /etc/php/7.4/apache2/php.ini 
         regexp: ^short_open_tag
         line: 'short_open_tag=ON'
       notify: restart apache

     # Restart Services
    handlers: 
      - name: restart apache
        service: 
           name: apache2
           state: restarted 
